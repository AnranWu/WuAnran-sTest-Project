//李苍皓已阅读哈哈哈

/****************************
* Author : W.A.R            *
* Date : 2020-09-07-21:47   *
****************************/
/*
ans数组一定要记得初始化，否则会wa
反向建边dfs统计有多少支持者 
*/
#pragma GCC optimize("O3")
#pragma G++ optimize("O3")
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<algorithm>
#include<queue>
#include<map>
#include<stack>
#include<string>
#include<set>
#define mem(a,x) memset(a,x,sizeof(a))
#define Rint register int
using namespace std;
typedef long long ll;
const int maxn=1e4+50;
const int maxm=6e4+50;
const ll mod=1e9+7;
const int inf=0x3f3f3f3f;

namespace Fast_IO{
    const int MAXL((1 << 18) + 1);int iof, iotp;
    char ioif[MAXL], *ioiS, *ioiT, ioof[MAXL],*iooS=ioof,*iooT=ioof+MAXL-1,ioc,iost[55];
    char Getchar(){
        if (ioiS == ioiT){
            ioiS=ioif;ioiT=ioiS+fread(ioif,1,MAXL,stdin);return (ioiS == ioiT ? EOF : *ioiS++);
        }else return (*ioiS++);
    }
    void Write(){fwrite(ioof,1,iooS-ioof,stdout);iooS=ioof;}
    void Putchar(char x){*iooS++ = x;if (iooS == iooT)Write();}
    inline int read(){
        int x=0;for(iof=1,ioc=Getchar();(ioc<'0'||ioc>'9')&&ioc!=EOF;)iof=ioc=='-'?-1:1,ioc=Getchar();
		if(ioc==EOF)exit(0);
        for(x=0;ioc<='9'&&ioc>='0';ioc=Getchar())x=(x<<3)+(x<<1)+(ioc^48);return x*iof;
    }
    inline long long read_ll(){
        long long x=0;for(iof=1,ioc=Getchar();(ioc<'0'||ioc>'9')&&ioc!=EOF;)iof=ioc=='-'?-1:1,ioc=Getchar();
		if(ioc==EOF)exit(0);
        for(x=0;ioc<='9'&&ioc>='0';ioc=Getchar())x=(x<<3)+(x<<1)+(ioc^48);return x*iof;
    }
    template <class Int>void Print(Int x, char ch = '\0'){
        if(!x)Putchar('0');if(x<0)Putchar('-'),x=-x;while(x)iost[++iotp]=x%10+'0',x/=10;
        while(iotp)Putchar(iost[iotp--]);if (ch)Putchar(ch);
    }
    void Getstr(char *s, int &l){
        for(ioc=Getchar();ioc==' '||ioc=='\n'||ioc=='\t';)ioc=Getchar();
		if(ioc==EOF)exit(0);
        for(l=0;!(ioc==' '||ioc=='\n'||ioc=='\t'||ioc==EOF);ioc=Getchar())s[l++]=ioc;s[l] = 0;
    }
    void Putstr(const char *s){for(int i=0,n=strlen(s);i<n;++i)Putchar(s[i]);}
} // namespace Fast_IO 
using namespace Fast_IO;

struct Edge{int from,to,nxt;}e[maxm],E[maxn];
bool vis[maxn],visited[maxn];
int val[maxn],ans[maxn],sta[maxn],Head[maxn],head[maxn],dfn[maxn],low[maxn],scc[maxn],in[maxn],sum,cnt,Ct,ct,top,sccnum,n,m;
void addE(int u,int v){e[++ct].from=u;e[ct].to=v;e[ct].nxt=head[u];head[u]=ct;}
void AddE(int u,int v){E[++Ct].from=u;E[Ct].to=v;E[Ct].nxt=Head[u];Head[u]=Ct;}
void Init(){
	ct=0;Ct=0;sccnum=0;top=0;cnt=0;sum=0;
	mem(vis,0);mem(visited,0);mem(head,0);mem(Head,0);mem(dfn,0);mem(low,0);mem(scc,0);mem(in,0);mem(ans,0);
}
void Tarjan(int u){
	dfn[u]=low[u]=++cnt;
	sta[++top]=u;vis[u]=1;
	for(int i=head[u];i;i=e[i].nxt){
		int v=e[i].to;
		if(!dfn[v]){Tarjan(v);low[u]=min(low[u],low[v]);}
		else if(vis[v])low[u]=min(low[u],dfn[v]);
	}
	if(low[u]==dfn[u])
	{
		int cur,num=0;sccnum++;
		do{
			num++;
			cur=sta[top--];vis[cur]=0;
			scc[cur]=sccnum;
		}while(cur!=u);val[sccnum]=num;
	}
}

void dfs(int u){
	visited[u]=1;
	sum+=val[u];
	for(int i=Head[u];i;i=E[i].nxt){
		int v=E[i].to;if(!visited[v])dfs(v);
	}
}


int main(){
	int T;scanf("%d",&T);
	for(int Case=1;Case<=T;Case++){scanf("%d%d",&n,&m);Init();
		while(m--){int a,b;scanf("%d%d",&a,&b);a++,b++;addE(a,b);}
		for(int i=1;i<=n;i++)if(!dfn[i])Tarjan(i);
		for(int i=1;i<=ct;i++){
			int u=e[i].from,v=e[i].to;
			if(scc[u]!=scc[v])AddE(scc[v],scc[u]),in[scc[u]]++;//反向建边 
		}
		int ansmax=0;
		for(int i=1;i<=sccnum;i++){
			if(!in[i]){
				sum=0;
				mem(visited,0);
				dfs(i);
				ans[i]=sum-1;
				ansmax=max(ansmax,ans[i]);
			}
		}
		bool flag=0;
		//for(int i=1;i<=sccnum;i++)printf("ans[%d]= %d\n",i,ans[i]);
		//for(int i=1;i<=sccnum;i++)printf("val[%d]= %d\n",i,val[i]);
		printf("Case %d: %d\n",Case,ansmax);
		for(int i=1;i<=n;i++){
			if(ans[scc[i]]==ansmax){
				if(!flag)printf("%d",i-1),flag=1;
				else printf(" %d",i-1);
			}
		}putchar(10);
	}
	return 0;
}
